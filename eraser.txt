title Video Sharing Platform Data Model

// --- Core User and Content Tables ---
users [icon: user, color: yellow]{
  _id string pk
  username string
  email string
  fullName string
  avatar string
  coverImage string
  passwordHash string
  refreshToken string
  createdAt Date
  updatedAt Date
}

videos [icon: video, color: red]{
  _id string pk
  videoFile string
  thumbnail string
  owner string fk
  title string
  description string
  duration string
  views number
  isPublished boolean 
  createdAt Date
  updatedAt Date
}

tweets [icon: message, color: cyan]{
  _id string pk
  owner string fk
  content string
  createdAt Date
  updatedAt Date
}


// --- Interaction Tables ---
likes [icon: heart, color: blue]{
  _id string pk
  likedBy string fk
  commentId string fk
  videoId string fk
  tweetId string fk
  createdAt Date
  updatedAt Date
}

comments [icon: chat, color: gray]{
  _id string pk
  content string
  videoId string fk
  owner string fk
  createdAt Date
  updatedAt Date
}

subscriptions [icon: users, color: orange]{
  _id string pk
  subscriber string fk // The user who is subscribing
  channel string fk // The user who is being subscribed to
  createdAt Date
  updatedAt Date
}


// --- Organization & History Tables (Many-to-Many) ---
playlists [icon: list, color: green]{
  _id string pk
  name string
  description string
  owner string fk
  createdAt Date
  updatedAt Date
}

playlistVideos [icon: link, color: lightgray]{
  playlistId string fk
  videoId string fk
}

watchHistory [icon: history, color: purple]{
  userId string fk
  videoId string fk
  watchedAt Date
}


// --- Define Relationships ---
// User and Content Ownership
videos.owner > users._id
tweets.owner > users._id
playlists.owner > users._id
comments.owner > users._id
likes.likedBy > users._id

// Subscriptions (User to User)
subscriptions.subscriber > users._id
subscriptions.channel > users._id

// Comments on Videos
comments.videoId > videos._id

// Likes (Polymorphic: a like can be on a video, comment, or tweet)
likes.videoId > videos._id
likes.commentId > comments._id
likes.tweetId > tweets._id

// Many-to-Many Relationships
users._id < watchHistory.userId
videos._id < watchHistory.videoId

playlists._id < playlistVideos.playlistId
videos._id < playlistVideos.videoId